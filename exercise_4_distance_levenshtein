#4: Viết chương trình tính khoảng cách chỉnh sửa tối thiểu Levenshtein. Khoảng cách Levenshtein thể hiện khoảng cách khác biệt giữa 2 chuỗi ký tự. Khoảng cách Levenshtein giữa chuỗi S và chuỗi T là số bước ít nhất biến chuỗi S thành chuỗi T

def levenshtein_distance(s, t):
    a, b = len(s), len(t)
    D = [[0] * (b + 1) for _ in range(a + 1)]
    
    for i in range(a + 1):
        D[i][0] = i
    for j in range(b + 1):
        D[0][j] = j
    
    for i in range(1, a + 1):
        for j in range(1, b + 1):
            if s[i - 1] == t[j - 1]:
                cost = 0
            else:
                cost = 1
            D[i][j] = min(D[i - 1][j] + 1,      # Xóa
                           D[i][j - 1] + 1,      # Thêm
                           D[i - 1][j - 1] + cost)  # Thay thế
    
    return D[a][b]

# Ví dụ
s = "yu"
t = "you"
print(f"Khoảng cách Levenshtein giữa '{s}' và '{t}' là {levenshtein_distance(s, t)}")